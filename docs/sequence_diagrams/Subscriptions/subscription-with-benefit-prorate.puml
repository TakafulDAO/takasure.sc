@startuml Subscriptions with benefits prorate
title Subscription without benefits prorate
autonumber

actor Backend
participant SubscriptionModule
participant MembersData
participant KYCModule
' participant CouponPool
' participant LifeBenefitModule
' participant Reserve

Backend -> SubscriptionModule: paySubscriptionOnBehalfOf(memberWallet, parentWallet, contribution)

alt Caller is valid
  alt Module enabled
    alt Contribution is minimum (25USDC)
      SubscriptionModule -> MembersData: getAssociationMemberData(memberWallet)
      MembersData --> SubscriptionModule: Returns member Data

      alt Member is valid
        SubscriptionModule -> MembersData: getAssociationMemberData(parentWallet)
        MembersData --> SubscriptionModule: Returns parent Data

        alt Parent is valid
          SubscriptionModule -> MembersData: registerAssociationMember(memberWallet, parentWallet, contribution)
          MembersData -> MembersData: Emits event
          MembersData --> SubscriptionModule: Returns success

          alt Success
            SubscriptionModule -> KYCModule: approveKYC(memberWallet)
            KYCModule -> KYCModule: Emits event

            alt 30 days passed
                CouponPool -> SubscriptionModule: transfer minimum contribution
                Reserve -> Reserve: Run algorithms (Do not include member)
            end

            alt More than 30 days passed
                Backend -> LifeBenefitModule: joinBenefit(memberWallet)
                LifeBenefitModule -> LifeBenefitModule: Calculates prorated contribution
                LifeBenefitModule -> MembersData: updateMember(memberWallet)
                CouponPool -> Reserve: transfer prorated contribution to Reserve 
                Reserve -> Reserve: Run algorithms (include member)
            end            

          else Failure
            SubscriptionModule --> Backend: Revert
          end

        else Parent is invalid
          SubscriptionModule --> Backend: Revert
        end

      else Member is invalid 
        SubscriptionModule --> Backend: Revert
      end

    else Contribution is not minimum
      SubscriptionModule --> Backend: Revert
    end

  else Module disabled
    SubscriptionModule --> Backend: Revert
  end

else Caller is not valid
  SubscriptionModule --> Backend: Revert
end

@enduml
