@startuml Subscription_with_benefits_no_prorate
title Subscription with benefits — no prorate
autonumber

!include subscription-common.puml

actor Backend
actor Parent
participant SubscriptionModule
participant MembersData
participant CouponPool
participant RewardsModule
participant KYCModule
participant LifeBenefitModule
participant Reserve

Backend -> SubscriptionModule: paySubscriptionOnBehalfOf(memberWallet, parentWallet, contribution)

PRECHECKS_CALLER_MODULE()
PRECHECKS_CONTRIB_RANGE25_250()
LOAD_MEMBER_AND_VALIDATE()
OPTIONAL_PARENT_VALIDATE()

' Asignar reward por la contribución mínima (si hubo parent)
opt [there-was-a-parent]
  SubscriptionModule -> RewardsModule: assignParentReward(for the minimum contribution)
end

REGISTER_AND_CONFIRM()

' Flujo de fondos/beneficios (no prorate)
CouponPool -> SubscriptionModule: transfer minimum contribution
KYC_MANDATORY()

Backend -> LifeBenefitModule: joinBenefit(memberWallet)
LifeBenefitModule -> MembersData: updateMember(memberWallet)

SubscriptionModule -> Reserve: transfer minimum contribution to Reserve

opt [there-was-a-parent]
  SubscriptionModule -> RewardsModule: rewardParent
  RewardsModule -> RewardsModule: Emits event
  RewardsModule --> Parent: transfer parent reward
end

CouponPool -> Reserve: transfer remaining contribution to Reserve

opt [there-was-a-parent]
  LifeBenefitModule -> RewardsModule: assignParentReward(for the remaining contribution)
  LifeBenefitModule -> RewardsModule: rewardParent
  RewardsModule -> RewardsModule: Emits event
  RewardsModule --> Parent: transfer parent reward
end

Reserve -> Reserve: Run algorithms (include member)

@enduml
