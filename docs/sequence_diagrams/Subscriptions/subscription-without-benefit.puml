@startuml Subscriptions_without_benefits
title Subscription without benefits
autonumber

actor Backend
actor Parent
participant SubscriptionModule
participant KYCModule
participant MembersData
participant RewardsModule
participant CouponPool
participant Reserve

Backend -> SubscriptionModule: paySubscriptionOnBehalfOf(memberWallet, parentWallet, contribution)

break [Caller-NOT-valid]
  SubscriptionModule -x Backend: revert InvalidCaller()
end

break [Module-disabled]
  SubscriptionModule -x Backend: revert ModuleDisabled()
end

break [Contribution-less-than-25-USDC]
  SubscriptionModule -x Backend: revert WrongContribution()
end

SubscriptionModule -> MembersData: getAssociationMemberData(memberWallet)
MembersData --> SubscriptionModule: Member data

break [Member-invalid]
  SubscriptionModule -x Backend: revert InvalidMember()
end

opt [Parent-wallet-not-zero]
  SubscriptionModule -> MembersData: getAssociationMemberData(parentWallet)
  MembersData --> SubscriptionModule: Parent data

  break [Parent-invalid]
    SubscriptionModule -x Backend: revert InvalidParent()
  end

  SubscriptionModule -> RewardsModule: assignParentReward
end

SubscriptionModule -> MembersData: registerAssociationMember(memberWallet,parentWallet,contribution)
MembersData -> MembersData: Emits event
MembersData --> SubscriptionModule: success

CouponPool -> SubscriptionModule: transfer contribution

opt [KYC-user]
  SubscriptionModule -> KYCModule: approveKYC(memberWallet)
  KYCModule -> KYCModule: Emits event
end

opt [>30-days-passed-or-apply-to-service]
  SubscriptionModule -> Reserve: transfer contribution to Reserve
  Reserve -> Reserve: Run algorithms (Do not include member)

  opt [there-was-a-parent]
    SubscriptionModule -> RewardsModule: rewardParent
    RewardsModule -> RewardsModule: Emits event
    RewardsModule --> Parent: transfer parent reward
  end
end

@enduml
